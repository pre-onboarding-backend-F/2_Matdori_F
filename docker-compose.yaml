services:
    api:
        container_name: api
        build:
            context: .
            dockerfile: DockerFile
        volumes:
            - ./src:/api/src
        restart: always
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
        depends_on:
            - dev_db
            - redis
        networks:
            - container-network

    dev_db:
        image: postgres
        container_name: db
        environment:
            POSTGRES_USER: ${POSTGRESQL_USER}
            POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
            POSTGRES_DB: ${POSTGRESQL_DATABASE}
        restart: always
        ports:
            - ${POSTGRESQL_PORT}:${POSTGRESQL_PORT}
        networks:
            - container-network

    redis:
        image: 'redis:alpine'
        container_name: redis
        ports:
            - ${REDIS_PORT}:${REDIS_PORT}
        restart: always
        networks:
            - container-network
        depends_on:
            - dev_db
        volumes:
            - redis:/data

    redisinsight:
        image: redislabs/redisinsight:latest
        container_name: redisinsight
        ports:
            - ${REDIS_INSIGHT_PORT}:${REDIS_INSIGHT_PORT}
        restart: always
        volumes:
            - redisinsight:/data
        depends_on:
            - redis
        networks:
            - container-network

volumes:
    postgres:
        driver: cio
        driver_opts:
            profile: 'POSTGRESQL'
    redis:
    redisinsight:

networks:
    container-network:
        driver: bridge
